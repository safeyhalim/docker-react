language: generic

sudo: required # Super user level permissions are needed
services:
  - docker # Travis CI  is going to install Docker engine

before_install:
  - docker build -t safeyhalim/docker-react -f Dockerfile.dev . # Tell Travis CI to build the Docker image from the development Dockerfile and giving it a tag name to be able to easily refer to it in the future (we cannot copy the image-id in case of Travis CI automated commands)

script: # Travis CI commands to run the test suite. Travis CI is going to observe the result of each of the commands. If anyone returns anything other than 0, Travis CI is going to assume that the testing has failed
  - docker run -e CI=true safeyhalim/docker-react npm run test -- --coverage # the -- --coverage is a flag specific to npm run test to make sure that the command exits at the end (the default behaviour is that it doesn't and waits for user action. We must make sure it exists so that Travis CI knows that the test has finished execution)
     # -e flag sets an environment variable in the Docker container CI=true is an environment varialble specific to the create-react-app project to allow it to run in a CI pipeline

deploy:
  provider: elasticbeanstalk # Travis CI comes pre-configured with many providers. One of them is AWS ElasticBeanstalk
  region: "eu-central-1" # The AWS region
  app: "docker-react" # The application name on Elastic Beanstalk
  env: "DockerReact-env-1" # The environment name on Elastic Beanstalk (Note: I originally created an environment called DockerReact-env. But this environment was with Amazon Linux 2. But Amazon Linux 2 doesn't work very nicely with Travis CI for some reason)
  bucket: "elasticbeanstalk-eu-central-1-517056985538" # Travis CI is going to package the source code of the master branch of the git repository and upload it the S3 bucket that belongs to the Elastic BeanStalk. This is the name of this S3 bucket. Btw. It's one s3 bucket for all the Elastic BeanStalk applications that you have. Every BeanStalk project (application) will have a folder under this S3 bucket
  bucket_path: "docker-react" # The path to the folder associated with the application in the S3 bucket of Elastic BeanStalk. By default, the folder name is the same as the app name.
  on:
    branch: master # Deploy when new code is merged into master
  access_key_id: "$AWS_ACCESS_KEY" # Environment variables stored on Travis CI side
  secret_access_key: "$AWS_SECRET_KEY"